<?xml version="1.0" encoding="UTF-8"?>
<svg width="1400" height="1100" xmlns="http://www.w3.org/2000/svg">
  <!-- Dark background -->
  <rect width="1400" height="1100" fill="#0d1117"/>
  
  <!-- Title -->
  <text x="700" y="50" font-family="Arial, sans-serif" font-size="36" font-weight="bold" fill="#58a6ff" text-anchor="middle">
    QuickShift Architecture - Step by Step
  </text>
  <text x="700" y="85" font-family="Arial, sans-serif" font-size="18" fill="#8b949e" text-anchor="middle">
    Adaptive QUIC-Based File Transfer with Blake3 Verification
  </text>
  
  <!-- Define gradients and markers -->
  <defs>
    <linearGradient id="step1Grad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#3fb950;stop-opacity:0.3" />
      <stop offset="100%" style="stop-color:#3fb950;stop-opacity:0.1" />
    </linearGradient>
    <linearGradient id="step2Grad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#f778ba;stop-opacity:0.3" />
      <stop offset="100%" style="stop-color:#f778ba;stop-opacity:0.1" />
    </linearGradient>
    <linearGradient id="step3Grad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#d29922;stop-opacity:0.3" />
      <stop offset="100%" style="stop-color:#d29922;stop-opacity:0.1" />
    </linearGradient>
    <linearGradient id="step4Grad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#58a6ff;stop-opacity:0.3" />
      <stop offset="100%" style="stop-color:#58a6ff;stop-opacity:0.1" />
    </linearGradient>
    <linearGradient id="step5Grad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#a371f7;stop-opacity:0.3" />
      <stop offset="100%" style="stop-color:#a371f7;stop-opacity:0.1" />
    </linearGradient>
    
    <marker id="arrowBlue" markerWidth="12" markerHeight="12" refX="11" refY="4" orient="auto">
      <polygon points="0 0, 12 4, 0 8" fill="#58a6ff" />
    </marker>
    <marker id="arrowGreen" markerWidth="12" markerHeight="12" refX="11" refY="4" orient="auto">
      <polygon points="0 0, 12 4, 0 8" fill="#3fb950" />
    </marker>
  </defs>
  
  <!-- STEP 1: Data Input Module -->
  <g id="step1">
    <rect x="100" y="150" width="1200" height="120" rx="15" fill="url(#step1Grad)" stroke="#3fb950" stroke-width="3"/>
    <text x="150" y="185" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#3fb950">
      Step 1: Data Input Module
    </text>
    <text x="150" y="215" font-family="Arial, sans-serif" font-size="14" fill="#c9d1d9">
      üìÑ File Input: test_data.bin (10MB)
    </text>
    <text x="150" y="240" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Read file from disk using std::fs::File
    </text>
    <text x="150" y="260" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Load into memory buffer (Vec&lt;u8&gt;)
    </text>
    
    <!-- Blake3 indicator -->
    <rect x="1100" y="180" width="150" height="60" rx="8" fill="#161b22" stroke="#f778ba" stroke-width="2"/>
    <text x="1175" y="205" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#f778ba" text-anchor="middle">
      Blake3 Ready
    </text>
    <text x="1175" y="225" font-family="Arial, sans-serif" font-size="11" fill="#8b949e" text-anchor="middle">
      Hasher initialized
    </text>
  </g>
  
  <!-- Arrow to Step 2 -->
  <path d="M 700 270 L 700 310" stroke="#58a6ff" stroke-width="4" fill="none" marker-end="url(#arrowBlue)"/>
  <text x="720" y="295" font-family="Arial, sans-serif" font-size="12" fill="#58a6ff">File data flows</text>
  
  <!-- STEP 2: Adaptive Task Control Module -->
  <g id="step2">
    <rect x="100" y="310" width="1200" height="140" rx="15" fill="url(#step2Grad)" stroke="#f778ba" stroke-width="3"/>
    <text x="150" y="345" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#f778ba">
      Step 2: Adaptive Task Control Module
    </text>
    <text x="150" y="375" font-family="Arial, sans-serif" font-size="14" fill="#c9d1d9">
      üéØ Network Quality Analysis and Strategy Calculation
    </text>
    <text x="150" y="400" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Monitor: Latency (10-100ms), Bandwidth (20-200 Mbps), Packet Loss (0-5%)
    </text>
    <text x="150" y="420" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Calculate Quality Score: (1/latency) √ó bandwidth √ó (1 - loss)
    </text>
    <text x="150" y="440" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Determine: Chunk Size (16-75KB) | Concurrent Streams (4-18) | Result: 60 adaptations
    </text>
  </g>
  
  <!-- Arrow to Step 3 -->
  <path d="M 700 450 L 700 490" stroke="#58a6ff" stroke-width="4" fill="none" marker-end="url(#arrowBlue)"/>
  <text x="720" y="475" font-family="Arial, sans-serif" font-size="12" fill="#58a6ff">Strategy applied</text>
  
  <!-- STEP 3: Tokio Task Creation -->
  <g id="step3">
    <rect x="100" y="490" width="1200" height="160" rx="15" fill="url(#step3Grad)" stroke="#d29922" stroke-width="3"/>
    <text x="150" y="525" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#d29922">
      Step 3: Tokio Task Creation and Parallel Processing
    </text>
    <text x="150" y="555" font-family="Arial, sans-serif" font-size="14" fill="#c9d1d9">
      ‚ö° Rayon Parallel Chunking + Tokio Async Tasks
    </text>
    <text x="150" y="580" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Split file into chunks (336 chunks total)
    </text>
    <text x="150" y="600" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Rayon parallel_iter: Compress each chunk + Blake3 hash computation
    </text>
    <text x="150" y="620" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ tokio::spawn: Create async tasks for each chunk (4-18 concurrent)
    </text>
    
    <!-- Blake3 indicator -->
    <rect x="1050" y="545" width="200" height="80" rx="8" fill="#161b22" stroke="#3fb950" stroke-width="2"/>
    <text x="1150" y="570" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#3fb950" text-anchor="middle">
      ‚úì Blake3 Hash
    </text>
    <text x="1150" y="590" font-family="Arial, sans-serif" font-size="11" fill="#8b949e" text-anchor="middle">
      Per-chunk verification
    </text>
    <text x="1150" y="610" font-family="Arial, sans-serif" font-size="11" fill="#3fb950" text-anchor="middle">
      336 hashes computed
    </text>
  </g>
  
  <!-- Arrow to Step 4 -->
  <path d="M 700 650 L 700 690" stroke="#58a6ff" stroke-width="4" fill="none" marker-end="url(#arrowBlue)"/>
  <text x="720" y="675" font-family="Arial, sans-serif" font-size="12" fill="#58a6ff">Tasks ready</text>
  
  <!-- STEP 4: QUIC Transport Layer -->
  <g id="step4">
    <rect x="100" y="690" width="1200" height="160" rx="15" fill="url(#step4Grad)" stroke="#58a6ff" stroke-width="3"/>
    <text x="150" y="725" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#58a6ff">
      Step 4: QUIC Transport Layer (0-RTT)
    </text>
    <text x="150" y="755" font-family="Arial, sans-serif" font-size="14" fill="#c9d1d9">
      üåê Send chunks via concurrent QUIC streams
    </text>
    <text x="150" y="780" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Protocol: QUIC over UDP (TLS 1.3 encrypted)
    </text>
    <text x="150" y="800" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Each stream: Send [Blake3 hash (32 bytes)] + [compressed chunk data]
    </text>
    <text x="150" y="820" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Features: No head-of-line blocking | Connection migration | 291.24 Mbps throughput
    </text>
    
    <!-- Stream visualization -->
    <g id="streams">
      <rect x="950" y="735" width="90" height="45" rx="5" fill="#161b22" stroke="#58a6ff" stroke-width="1.5"/>
      <text x="995" y="762" font-family="Arial, sans-serif" font-size="11" fill="#58a6ff" text-anchor="middle">Stream 1</text>
      
      <rect x="1060" y="735" width="90" height="45" rx="5" fill="#161b22" stroke="#58a6ff" stroke-width="1.5"/>
      <text x="1105" y="762" font-family="Arial, sans-serif" font-size="11" fill="#58a6ff" text-anchor="middle">Stream 2</text>
      
      <rect x="1170" y="735" width="90" height="45" rx="5" fill="#161b22" stroke="#58a6ff" stroke-width="1.5"/>
      <text x="1215" y="762" font-family="Arial, sans-serif" font-size="11" fill="#58a6ff" text-anchor="middle">Stream N</text>
      
      <text x="995" y="805" font-family="Arial, sans-serif" font-size="10" fill="#8b949e" text-anchor="middle">hash+data</text>
      <text x="1105" y="805" font-family="Arial, sans-serif" font-size="10" fill="#8b949e" text-anchor="middle">hash+data</text>
      <text x="1215" y="805" font-family="Arial, sans-serif" font-size="10" fill="#8b949e" text-anchor="middle">hash+data</text>
    </g>
  </g>
  
  <!-- Arrow to Step 5 -->
  <path d="M 700 850 L 700 890" stroke="#58a6ff" stroke-width="4" fill="none" marker-end="url(#arrowBlue)"/>
  <text x="720" y="875" font-family="Arial, sans-serif" font-size="12" fill="#58a6ff">Network transfer</text>
  
  <!-- STEP 5: Receiver and Verification -->
  <g id="step5">
    <rect x="100" y="890" width="1200" height="140" rx="15" fill="url(#step5Grad)" stroke="#a371f7" stroke-width="3"/>
    <text x="150" y="925" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#a371f7">
      Step 5: Receiver and Blake3 Verification
    </text>
    <text x="150" y="955" font-family="Arial, sans-serif" font-size="14" fill="#c9d1d9">
      üì• Receive, verify, and write data
    </text>
    <text x="150" y="980" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Accept multiple concurrent streams (326 chunks received)
    </text>
    <text x="150" y="1000" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ For each chunk: Blake3(received_data) == transmitted_hash ‚Üí ‚úì Verify integrity
    </text>
    <text x="150" y="1020" font-family="Arial, sans-serif" font-size="13" fill="#8b949e">
      ‚Ä¢ Decompress and write to disk | Result: 0 failures, 100% integrity ‚úì
    </text>
    
    <!-- Blake3 verification indicator -->
    <rect x="1050" y="930" width="200" height="80" rx="8" fill="#161b22" stroke="#3fb950" stroke-width="2"/>
    <text x="1150" y="955" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#3fb950" text-anchor="middle">
      ‚úì Blake3 Verified
    </text>
    <text x="1150" y="975" font-family="Arial, sans-serif" font-size="11" fill="#8b949e" text-anchor="middle">
      All chunks validated
    </text>
    <text x="1150" y="995" font-family="Arial, sans-serif" font-size="11" fill="#3fb950" text-anchor="middle">
      0 hash mismatches
    </text>
  </g>
  
  <!-- Blake3 Watermark -->
  <g id="blake3-watermark">
    <rect x="50" y="300" width="30" height="400" rx="5" fill="#f778ba" opacity="0.3"/>
    <text x="65" y="500" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#f778ba" text-anchor="middle" transform="rotate(-90 65 500)">
      Blake3 Verification Chain
    </text>
  </g>
  
  <!-- Performance Summary -->
  <g id="summary">
    <rect x="200" y="1050" width="1000" height="30" rx="8" fill="#161b22" stroke="#3fb950" stroke-width="2"/>
    <text x="700" y="1072" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#3fb950" text-anchor="middle">
      ‚ö° Result: 0.29s transfer | 291.24 Mbps | 336 chunks | 0 failures | 12.2x faster than TCP
    </text>
  </g>
</svg>
